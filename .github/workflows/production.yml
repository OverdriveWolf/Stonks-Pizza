name: Production Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Laravel App
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2.4'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

    - name: Generate App Key
      run: php artisan key:generate

    - name: Optimize Laravel
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        php artisan event:cache

    - name: Set Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: laravel-build
        path: ./

  docker:
    name: Build & Push Docker Image
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: laravel-build
        path: ./

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6.5.0
      with:
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/stonks-pizza:latest

  migrate:
    name: Run SQLite Migrations
    needs: docker
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2.4'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

    - name: Prepare SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite
        chmod -R 777 database

    - name: Run Migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        APP_ENV: production
      run: php artisan migrate --force
